package com.smart.smartwebcontracts.contracts.infrastructure.blockchain.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/LFDT-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.7.0.
 */
@SuppressWarnings("rawtypes")
public class HashRegistry extends Contract {
    public static final String BINARY = "{\r\n"
            + "\t\"functionDebugData\": {},\r\n"
            + "\t\"generatedSources\": [],\r\n"
            + "\t\"linkReferences\": {},\r\n"
            + "\t\"object\": \"6080604052348015600e575f5ffd5b50610b1c8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063344610671461004e5780634a0ced24146100805780636b2fafa91461009c578063a4458dc4146100ce575b5f5ffd5b610068600480360381019061006391906104a6565b6100ec565b6040516100779392919061058f565b60405180910390f35b61009a600480360381019061009591906106f7565b6101c5565b005b6100b660048036038101906100b191906104a6565b6102d6565b6040516100c59392919061058f565b60405180910390f35b6100d6610457565b6040516100e3919061073e565b60405180910390f35b5f81815481106100fa575f80fd5b905f5260205f2090600302015f91509050805f01805461011990610784565b80601f016020809104026020016040519081016040528092919081815260200182805461014590610784565b80156101905780601f1061016757610100808354040283529160200191610190565b820191905f5260205f20905b81548152906001019060200180831161017357829003601f168201915b505050505090806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b5f60405180606001604052808381526020014281526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f0190816102309190610954565b50602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050503373ffffffffffffffffffffffffffffffffffffffff167f2787ef084bf5819c9296bd2c13744ec4a8c5a188a746135e3187731af976571582426040516102cb929190610a23565b60405180910390a250565b60605f5f5f805490508410610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031790610a9b565b60405180910390fd5b5f5f858154811061033457610333610ab9565b5b905f5260205f2090600302016040518060600160405290815f8201805461035a90610784565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610784565b80156103d15780601f106103a8576101008083540402835291602001916103d1565b820191905f5260205f20905b8154815290600101906020018083116103b457829003601f168201915b5050505050815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050805f015181602001518260400151935093509350509193909250565b5f5f80549050905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b61048581610473565b811461048f575f5ffd5b50565b5f813590506104a08161047c565b92915050565b5f602082840312156104bb576104ba61046b565b5b5f6104c884828501610492565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610513826104d1565b61051d81856104db565b935061052d8185602086016104eb565b610536816104f9565b840191505092915050565b61054a81610473565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61057982610550565b9050919050565b6105898161056f565b82525050565b5f6060820190508181035f8301526105a78186610509565b90506105b66020830185610541565b6105c36040830184610580565b949350505050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610609826104f9565b810181811067ffffffffffffffff82111715610628576106276105d3565b5b80604052505050565b5f61063a610462565b90506106468282610600565b919050565b5f67ffffffffffffffff821115610665576106646105d3565b5b61066e826104f9565b9050602081019050919050565b828183375f83830152505050565b5f61069b6106968461064b565b610631565b9050828152602081018484840111156106b7576106b66105cf565b5b6106c284828561067b565b509392505050565b5f82601f8301126106de576106dd6105cb565b5b81356106ee848260208601610689565b91505092915050565b5f6020828403121561070c5761070b61046b565b5b5f82013567ffffffffffffffff8111156107295761072861046f565b5b610735848285016106ca565b91505092915050565b5f6020820190506107515f830184610541565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061079b57607f821691505b6020821081036107ae576107ad610757565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107d5565b61081a86836107d5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61085561085061084b84610473565b610832565b610473565b9050919050565b5f819050919050565b61086e8361083b565b61088261087a8261085c565b8484546107e1565b825550505050565b5f5f905090565b61089961088a565b6108a4818484610865565b505050565b5b818110156108c7576108bc5f82610891565b6001810190506108aa565b5050565b601f82111561090c576108dd816107b4565b6108e6846107c6565b810160208510156108f5578190505b610909610901856107c6565b8301826108a9565b50505b505050565b5f82821c905092915050565b5f61092c5f1984600802610911565b1980831691505092915050565b5f610944838361091d565b9150826002028217905092915050565b61095d826104d1565b67ffffffffffffffff811115610976576109756105d3565b5b6109808254610784565b61098b8282856108cb565b5f60209050601f8311600181146109bc575f84156109aa578287015190505b6109b48582610939565b865550610a1b565b601f1984166109ca866107b4565b5f5b828110156109f1578489015182556001820191506020850194506020810190506109cc565b86831015610a0e5784890151610a0a601f89168261091d565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f830152610a3b8185610509565b9050610a4a6020830184610541565b9392505050565b7f496e646578206f7574206f6620626f756e6473000000000000000000000000005f82015250565b5f610a856013836104db565b9150610a9082610a51565b602082019050919050565b5f6020820190508181035f830152610ab281610a79565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea264697066735822122037928a98ec69ce0f84a95b2412c5d53320a3f9f10e43106665459454ae22313d64736f6c634300081e0033\",\r\n"
            + "\t\"opcodes\": \"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34461067 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x4A0CED24 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x6B2FAFA9 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xA4458DC4 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x119 SWAP1 PUSH2 0x784 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145 SWAP1 PUSH2 0x784 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x190 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x167 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x190 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x173 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2787EF084BF5819C9296BD2C13744EC4A8C5A188A746135E3187731AF9765715 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP3 SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 PUSH0 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x317 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x334 JUMPI PUSH2 0x333 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0x784 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x386 SWAP1 PUSH2 0x784 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x473 JUMP JUMPDEST DUP2 EQ PUSH2 0x48F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A0 DUP2 PUSH2 0x47C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x46B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4C8 DUP5 DUP3 DUP6 ADD PUSH2 0x492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x513 DUP3 PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x51D DUP2 DUP6 PUSH2 0x4DB JUMP JUMPDEST SWAP4 POP PUSH2 0x52D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x536 DUP2 PUSH2 0x4F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54A DUP2 PUSH2 0x473 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x579 DUP3 PUSH2 0x550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x56F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5A7 DUP2 DUP7 PUSH2 0x509 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x541 JUMP JUMPDEST PUSH2 0x5C3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x580 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x609 DUP3 PUSH2 0x4F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x628 JUMPI PUSH2 0x627 PUSH2 0x5D3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63A PUSH2 0x462 JUMP JUMPDEST SWAP1 POP PUSH2 0x646 DUP3 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x665 JUMPI PUSH2 0x664 PUSH2 0x5D3 JUMP JUMPDEST JUMPDEST PUSH2 0x66E DUP3 PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x69B PUSH2 0x696 DUP5 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x6B7 JUMPI PUSH2 0x6B6 PUSH2 0x5CF JUMP JUMPDEST JUMPDEST PUSH2 0x6C2 DUP5 DUP3 DUP6 PUSH2 0x67B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0x5CB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x689 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x46B JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x46F JUMP JUMPDEST JUMPDEST PUSH2 0x735 DUP5 DUP3 DUP6 ADD PUSH2 0x6CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x751 PUSH0 DUP4 ADD DUP5 PUSH2 0x541 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x79B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7AE JUMPI PUSH2 0x7AD PUSH2 0x757 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x810 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x81A DUP7 DUP4 PUSH2 0x7D5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x855 PUSH2 0x850 PUSH2 0x84B DUP5 PUSH2 0x473 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86E DUP4 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x882 PUSH2 0x87A DUP3 PUSH2 0x85C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7E1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x899 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x8A4 DUP2 DUP5 DUP5 PUSH2 0x865 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C7 JUMPI PUSH2 0x8BC PUSH0 DUP3 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8AA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x90C JUMPI PUSH2 0x8DD DUP2 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x8E6 DUP5 PUSH2 0x7C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8F5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x909 PUSH2 0x901 DUP6 PUSH2 0x7C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8A9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x92C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x911 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x944 DUP4 DUP4 PUSH2 0x91D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95D DUP3 PUSH2 0x4D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x975 PUSH2 0x5D3 JUMP JUMPDEST JUMPDEST PUSH2 0x980 DUP3 SLOAD PUSH2 0x784 JUMP JUMPDEST PUSH2 0x98B DUP3 DUP3 DUP6 PUSH2 0x8CB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9BC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9AA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9B4 DUP6 DUP3 PUSH2 0x939 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9CA DUP7 PUSH2 0x7B4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9F1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9CC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA0E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA0A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x91D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA3B DUP2 DUP6 PUSH2 0x509 JUMP JUMPDEST SWAP1 POP PUSH2 0xA4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x541 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA85 PUSH1 0x13 DUP4 PUSH2 0x4DB JUMP JUMPDEST SWAP2 POP PUSH2 0xA90 DUP3 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB2 DUP2 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP3 DUP11 SWAP9 EOFCREATE 0x69 0xCE 0xF DUP5 0xA9 JUMPDEST 0x24 SLT 0xC5 0xD5 CALLER KECCAK256 LOG3 EXTDELEGATECALL CALL 0xE NUMBER LT PUSH7 0x65459454AE2231 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER \",\r\n"
            + "\t\"sourceMap\": \"61:905:0:-:0;;;;;;;;;;;;;;;;;;;\"\r\n"
            + "}";


    public static final String FUNC_GETHASH = "getHash";

    public static final String FUNC_GETTOTALHASHES = "getTotalHashes";

    public static final String FUNC_RECORDS = "records";

    public static final String FUNC_REGISTERHASH = "registerHash";

    public static final Event HASHREGISTERED_EVENT = new Event("HashRegistered", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected HashRegistry(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected HashRegistry(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected HashRegistry(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected HashRegistry(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<HashRegisteredEventResponse> getHashRegisteredEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(HASHREGISTERED_EVENT, transactionReceipt);
        ArrayList<HashRegisteredEventResponse> responses = new ArrayList<HashRegisteredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            HashRegisteredEventResponse typedResponse = new HashRegisteredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.hash = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static HashRegisteredEventResponse getHashRegisteredEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(HASHREGISTERED_EVENT, log);
        HashRegisteredEventResponse typedResponse = new HashRegisteredEventResponse();
        typedResponse.log = log;
        typedResponse.sender = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.hash = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<HashRegisteredEventResponse> hashRegisteredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getHashRegisteredEventFromLog(log));
    }

    public Flowable<HashRegisteredEventResponse> hashRegisteredEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(HASHREGISTERED_EVENT));
        return hashRegisteredEventFlowable(filter);
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, String>> getHash(BigInteger index) {
        final Function function = new Function(FUNC_GETHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, String>>(function,
                new Callable<Tuple3<String, BigInteger, String>>() {
                    @Override
                    public Tuple3<String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, String>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getTotalHashes() {
        final Function function = new Function(FUNC_GETTOTALHASHES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, String>> records(BigInteger param0) {
        final Function function = new Function(FUNC_RECORDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, String>>(function,
                new Callable<Tuple3<String, BigInteger, String>>() {
                    @Override
                    public Tuple3<String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, String>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> registerHash(String _hash) {
        final Function function = new Function(
                FUNC_REGISTERHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static HashRegistry load(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new HashRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static HashRegistry load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new HashRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static HashRegistry load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new HashRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static HashRegistry load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new HashRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<HashRegistry> deploy(Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(HashRegistry.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<HashRegistry> deploy(Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(HashRegistry.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static RemoteCall<HashRegistry> deploy(Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(HashRegistry.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<HashRegistry> deploy(Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(HashRegistry.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
    }



    private static String getDeploymentBinary() {
        return BINARY;
    }


    public static class HashRegisteredEventResponse extends BaseEventResponse {
        public String sender;

        public String hash;

        public BigInteger timestamp;
    }
}
